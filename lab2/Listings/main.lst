


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usu�rio pressionar uma 
                       chave.
    7 00000000         ; Caso o usu�rio pressione uma chave, um LED deve pisc
                       ar a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instru��es do
                                                             tipo Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declara��es EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Defini��es de Valores
   17 00000000         
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; �rea de Dados - Declara��es de vari�veis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma vari�vel for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       ri�vel <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       vari�vel de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posi��o da RAM  
   28 00000000         
   29 00000000         ; ------------------------------------------------------
                       -------------------------
   30 00000000         ; �rea de C�digo - Tudo abaixo da diretiva a seguir 
                       ser� armazenado na mem�ria de 
   31 00000000         ;                  c�digo
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         
   34 00000000         ; Se alguma fun��o do arquivo for chamada em outro a
                       rquivo 
   35 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            fun��o Start a 
                                                            partir de 
   36 00000000         ; outro arquivo. No caso startup.s
   37 00000000         
   38 00000000         ; Se chamar alguma fun��o externa 
   39 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   40 00000000         ; fun��o <func>
   41 00000000         
   42 00000000                 IMPORT           PLL_Init
   43 00000000                 IMPORT           SysTick_Init
   44 00000000                 IMPORT           SysTick_Wait1ms



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           LCD_Init    ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
   46 00000000                 IMPORT           setup_LCD   ; Configuração do
                                                             LCD
   47 00000000                 IMPORT           send_comand_lcd
   48 00000000                 IMPORT           send_complex_comand_lcd
   49 00000000                 IMPORT           send_data_lcd
   50 00000000         
   51 00000000         
   52 00000000                 IMPORT           GPIO_Init
   53 00000000         ;IMPORT  PortN_Output
   54 00000000                 IMPORT           PortJ_Input
   55 00000000                 IMPORT           PortQ_Output
   56 00000000                 IMPORT           PortA_Output
   57 00000000                 IMPORT           PortP_Output
   58 00000000                 IMPORT           PortM_Output
   59 00000000                 IMPORT           PortL_Input
   60 00000000         ; ------------------------------------------------------
                       -------------------------
   61 00000000         ; Fun��o main()
   62 00000000         Start
   63 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   64 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   65 00000008 F7FF FFFE       BL               LCD_Init
   66 0000000C F7FF FFFE       BL               setup_LCD
   67 00000010         
   68 00000010 F04F 0061       MOV              R0, #97
   69 00000014 F7FF FFFE       BL               send_data_lcd
   70 00000018         
   71 00000018         
   72 00000018         MainLoop
   73 00000018         ; ****************************************
   74 00000018 F04F 0061       MOV              R0, #97
   75 0000001C         volta
   76 0000001C F7FF FFFE       BL               send_data_lcd
   77 00000020 4602            MOV              R2, R0
   78 00000022 F44F 707A       MOV              R0, #1000
   79 00000026 F7FF FFFE       BL               SysTick_Wait1ms
   80 0000002A 4610            MOV              R0, R2
   81 0000002C F100 0001       ADD              R0, R0, #1
   82 00000030 F7FF FFF4       BL               volta
   83 00000034         ; ****************************************
   84 00000034         
   85 00000034         
   86 00000034 F000 F851       BL               imprimeLed
   87 00000038 F000 F801       BL               AscendeLed
   88 0000003C         
   89 0000003C         ; MOV R0,#2_000000100
   90 0000003C         ; BL SysTick_Wait1ms
   91 0000003C         ; MOV R0,#2_1111
   92 0000003C         ; BL PortQ_Output
   93 0000003C         ; MOV R0,#2_1100000
   94 0000003C         ; BL PortP_Output



ARM Macro Assembler    Page 3 


   95 0000003C         ; MOV R0,#2_00100000
   96 0000003C E7EC            B                MainLoop
   97 0000003E         
   98 0000003E         ;-------------------------------------------------------
                       -------------------------
   99 0000003E         ; Fun��o Pisca_LED
  100 0000003E         ; Par�metro de entrada: N�o tem
  101 0000003E         ; Par�metro de sa�da: N�o tem
  102 0000003E         Pisca_LED
  103 0000003E         ; Fun��o Pisca_LED
  104 0000003E         ; Par�metro de entrada: N�o tem
  105 0000003E         ; Par�metro de sa�da: N�o tem
  106 0000003E         AscendeLed
  107 0000003E         ; ****************************************
  108 0000003E         ; Escrever fun��o que acende o LED, espera 1 segundo
                       , apaga o LED e espera 1 s
  109 0000003E         ; Esta fun��o deve chamar a rotina SysTick_Wait1ms c
                       om o par�metro de entrada em R0
  110 0000003E         ; ****************************************
  111 0000003E B500            PUSH{LR}
  112 00000040         
  113 00000040 4648            MOV              R0,R9       ;#2_00001111
  114 00000042         ;MOV R0,#3
  115 00000042 F7FF FFFE       BL               PortQ_Output
  116 00000046 4648            MOV              R0,R9       ;#2_11110000
  117 00000048 F7FF FFFE       BL               PortA_Output
  118 0000004C F04F 00FF       MOV              R0,#2_11111111
  119 00000050 F7FF FFFE       BL               PortP_Output
  120 00000054 F85D EB04       POP{LR}
  121 00000058         
  122 00000058 4770            BX               LR
  123 0000005A         
  124 0000005A         Varredura
  125 0000005A B500            PUSH{LR}
  126 0000005C BF08 F04F 
              0800             MOVEQ            R8,#0
  127 00000062 F04F 0310       MOV              R3,#2_00010000
  128 00000066 F04F 0501       MOV              R5,#1
  129 0000006A         
  130 0000006A         Varredura_loop
  131 0000006A F083 00FF       EOR              R0,R3,#2_11111111 ; inverter bi
                                                            ts ligados
  132 0000006E         
  133 0000006E F7FF FFFE       BL               PortM_Output
  134 00000072 F7FF FFFE       BL               PortL_Input
  135 00000076         
  136 00000076 F04F 04FF       MOV              R4,#2_11111111
  137 0000007A         
  138 0000007A F080 000F       EOR              R0,R0,#2_1111 ; inverter bits l
                                                            igados
  139 0000007E         
  140 0000007E 2801            CMP              R0, #2_00000001
  141 00000080 BF08            IT               EQ
  142 00000082 2400            MOVEQ            R4,#0
  143 00000084         
  144 00000084 2802            CMP              R0, #2_00000010
  145 00000086 BF08            IT               EQ
  146 00000088 2403            MOVEQ            R4,#3
  147 0000008A         



ARM Macro Assembler    Page 4 


  148 0000008A 2804            CMP              R0, #2_00000100
  149 0000008C BF08            IT               EQ
  150 0000008E 2406            MOVEQ            R4,#6
  151 00000090         
  152 00000090 2808            CMP              R0, #2_00001000
  153 00000092 BF08            IT               EQ
  154 00000094 2409            MOVEQ            R4,#9
  155 00000096         
  156 00000096 2CFF            CMP              R4,#2_11111111
  157 00000098 BF1C            ITT              NE
  158 0000009A 1964            ADDNE            R4,R4,R5
  159 0000009C E008            BNE              Debounce_TRUE
  160 0000009E         
  161 0000009E F105 0501       ADD              R5,R5,#1
  162 000000A2 EA4F 0343       LSL              R3,R3,#1
  163 000000A6 2B80            CMP              R3, #2_10000000
  164 000000A8 D1DF            BNE              Varredura_loop
  165 000000AA         
  166 000000AA         
  167 000000AA         
  168 000000AA         SaidaVarredura
  169 000000AA         
  170 000000AA         ; CMP R4,#2_11111111
  171 000000AA         ; IT NE
  172 000000AA         ;  BNE Debounce_TRUE
  173 000000AA         
  174 000000AA         Saida_deb
  175 000000AA         
  176 000000AA F85D EB04       POP{LR}
  177 000000AE 4770            BX               LR
  178 000000B0         
  179 000000B0         Debounce_TRUE
  180 000000B0         
  181 000000B0 2C0B            CMP              R4, #11
  182 000000B2 BF08            IT               EQ
  183 000000B4 2400            MOVEQ            R4,#0       ; zerar R4 >=10
  184 000000B6         
  185 000000B6 2C0A            CMP              R4, #10
  186 000000B8 BF28            IT               HS
  187 000000BA E7F6            BHS              Saida_deb   ; sair >=10
  188 000000BC         
  189 000000BC 454C            CMP              R4, R9      ; R9 = tecla aperta
                                                            da ; R10= n estados
                                                            
  190 000000BE BF0E            ITEE             EQ
  191 000000C0 F10A 0A01       ADDEQ            R10,R10,#1
  192 000000C4 F04F 0A0A       MOVNE            R10,#10
  193 000000C8 46A1            MOVNE            R9,R4
  194 000000CA         
  195 000000CA F1BA 0F0A       CMP              R10,#10
  196 000000CE BF04            ITT              EQ
  197 000000D0 F04F 0A00       MOVEQ            R10,#0
  198 000000D4 F04F 0801       MOVEQ            R8,#1
  199 000000D8         ;BNE Varredura
  200 000000D8 E7E7            B                Saida_deb
  201 000000DA         
  202 000000DA         imprimeLed
  203 000000DA B500            PUSH{LR}
  204 000000DC         



ARM Macro Assembler    Page 5 


  205 000000DC         repete
  206 000000DC F7FF FFBD       BL               Varredura
  207 000000E0 F04F 0001       mov              R0,#1
  208 000000E4         ;BL Sys-Tick_Wait1ms
  209 000000E4 F1B8 0F01       CMP              R8,#1
  210 000000E8 BF18            IT               NE
  211 000000EA E7F7            BNE              repete
  212 000000EC 4640            MOV              R0,R8
  213 000000EE         
  214 000000EE F7FF FFFE       BL               PortQ_Output
  215 000000F2 4640            MOV              R0,R8
  216 000000F4 F7FF FFFE       BL               PortP_Output
  217 000000F8         ;MOV R0,#2_00100000
  218 000000F8         
  219 000000F8 F85D EB04       POP{LR}
  220 000000FC 4770            BX               LR
  221 000000FE         
  222 000000FE         
  223 000000FE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  224 000000FE         ; Fim do Arquivo
  225 000000FE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  226 000000FE 00 00           ALIGN                        ;Garante que o fim 
                                                            da se��o est�
                                                             alinhada 
  227 00000100                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\IanIshikawa\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1
" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
AscendeLed 0000003E

Symbol: AscendeLed
   Definitions
      At line 106 in file main.s
   Uses
      At line 87 in file main.s
Comment: AscendeLed used once
Debounce_TRUE 000000B0

Symbol: Debounce_TRUE
   Definitions
      At line 179 in file main.s
   Uses
      At line 159 in file main.s
Comment: Debounce_TRUE used once
MainLoop 00000018

Symbol: MainLoop
   Definitions
      At line 72 in file main.s
   Uses
      At line 96 in file main.s
Comment: MainLoop used once
Pisca_LED 0000003E

Symbol: Pisca_LED
   Definitions
      At line 102 in file main.s
   Uses
      None
Comment: Pisca_LED unused
SaidaVarredura 000000AA

Symbol: SaidaVarredura
   Definitions
      At line 168 in file main.s
   Uses
      None
Comment: SaidaVarredura unused
Saida_deb 000000AA

Symbol: Saida_deb
   Definitions
      At line 174 in file main.s
   Uses
      At line 187 in file main.s
      At line 200 in file main.s

Start 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Start
   Definitions
      At line 62 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
Varredura 0000005A

Symbol: Varredura
   Definitions
      At line 124 in file main.s
   Uses
      At line 206 in file main.s
Comment: Varredura used once
Varredura_loop 0000006A

Symbol: Varredura_loop
   Definitions
      At line 130 in file main.s
   Uses
      At line 164 in file main.s
Comment: Varredura_loop used once
imprimeLed 000000DA

Symbol: imprimeLed
   Definitions
      At line 202 in file main.s
   Uses
      At line 86 in file main.s
Comment: imprimeLed used once
repete 000000DC

Symbol: repete
   Definitions
      At line 205 in file main.s
   Uses
      At line 211 in file main.s
Comment: repete used once
volta 0000001C

Symbol: volta
   Definitions
      At line 75 in file main.s
   Uses
      At line 82 in file main.s
Comment: volta used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: GPIO_Init unused
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 65 in file main.s
Comment: LCD_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 63 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 56 in file main.s
   Uses
      At line 117 in file main.s
Comment: PortA_Output used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 59 in file main.s
   Uses
      At line 134 in file main.s
Comment: PortL_Input used once
PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 58 in file main.s
   Uses
      At line 133 in file main.s
Comment: PortM_Output used once
PortP_Output 00000000

Symbol: PortP_Output



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 57 in file main.s
   Uses
      At line 119 in file main.s
      At line 216 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 55 in file main.s
   Uses
      At line 115 in file main.s
      At line 214 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 64 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 44 in file main.s
   Uses
      At line 79 in file main.s
Comment: SysTick_Wait1ms used once
send_comand_lcd 00000000

Symbol: send_comand_lcd
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: send_comand_lcd unused
send_complex_comand_lcd 00000000

Symbol: send_complex_comand_lcd
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: send_complex_comand_lcd unused
send_data_lcd 00000000

Symbol: send_data_lcd
   Definitions
      At line 49 in file main.s
   Uses
      At line 69 in file main.s
      At line 76 in file main.s

setup_LCD 00000000

Symbol: setup_LCD



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Definitions
      At line 46 in file main.s
   Uses
      At line 66 in file main.s
Comment: setup_LCD used once
15 symbols
363 symbols in table
