


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usu�rio pressionar uma 
                       chave.
    7 00000000         ; Caso o usu�rio pressione uma chave, um LED deve pisc
                       ar a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ;                               TIMER REGISTERS
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000 400FE604 
                       SYSCTL_RCGCTIMER_R
                               EQU              0x400FE604
   13 00000000 400FEA04 
                       SYSCTL_PRTIMER_R
                               EQU              0x400FEA04
   14 00000000 40030000 
                       TIMER0_CFG_R
                               EQU              0x40030000
   15 00000000 40030004 
                       TIMER0_TAMR_R
                               EQU              0x40030004
   16 00000000 40030008 
                       TIMER0_TBMR_R
                               EQU              0x40030008
   17 00000000 4003000C 
                       TIMER0_CTL_R
                               EQU              0x4003000C
   18 00000000 40030010 
                       TIMER0_SYNC_R
                               EQU              0x40030010
   19 00000000 40030018 
                       TIMER0_IMR_R
                               EQU              0x40030018
   20 00000000 4003001C 
                       TIMER0_RIS_R
                               EQU              0x4003001C
   21 00000000 40030020 
                       TIMER0_MIS_R
                               EQU              0x40030020
   22 00000000 40030024 
                       TIMER0_ICR_R
                               EQU              0x40030024
   23 00000000 40030028 
                       TIMER0_TAILR_R
                               EQU              0x40030028
   24 00000000 4003002C 
                       TIMER0_TBILR_R
                               EQU              0x4003002C
   25 00000000 40030030 
                       TIMER0_TAMATCHR_R
                               EQU              0x40030030
   26 00000000 40030034 
                       TIMER0_TBMATCHR_R



ARM Macro Assembler    Page 2 


                               EQU              0x40030034
   27 00000000 40030038 
                       TIMER0_TAPR_R
                               EQU              0x40030038
   28 00000000 4003003C 
                       TIMER0_TBPR_R
                               EQU              0x4003003C
   29 00000000 40030040 
                       TIMER0_TAPMR_R
                               EQU              0x40030040
   30 00000000 40030044 
                       TIMER0_TBPMR_R
                               EQU              0x40030044
   31 00000000 40030048 
                       TIMER0_TAR_R
                               EQU              0x40030048
   32 00000000 4003004C 
                       TIMER0_TBR_R
                               EQU              0x4003004C
   33 00000000 40030050 
                       TIMER0_TAV_R
                               EQU              0x40030050
   34 00000000 40030054 
                       TIMER0_TBV_R
                               EQU              0x40030054
   35 00000000 40030058 
                       TIMER0_RTCPD_R
                               EQU              0x40030058
   36 00000000 4003005C 
                       TIMER0_TAPS_R
                               EQU              0x4003005C
   37 00000000 40030060 
                       TIMER0_TBPS_R
                               EQU              0x40030060
   38 00000000 4003006C 
                       TIMER0_DMAEV_R
                               EQU              0x4003006C
   39 00000000 40030070 
                       TIMER0_ADCEV_R
                               EQU              0x40030070
   40 00000000 40030FC0 
                       TIMER0_PP_R
                               EQU              0x40030FC0
   41 00000000 40030FC8 
                       TIMER0_CC_R
                               EQU              0x40030FC8
   42 00000000         
   43 00000000 E000E410 
                       NVIC_PRI4_R
                               EQU              0xE000E410
   44 00000000 E000E100 
                       NVIC_EN0_R
                               EQU              0xE000E100
   45 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
   46 00000000 E000E108 
                       NVIC_EN2_R
                               EQU              0xE000E108



ARM Macro Assembler    Page 3 


   47 00000000 E000E10C 
                       NVIC_EN3_R
                               EQU              0xE000E10C
   48 00000000 E000E180 
                       NVIC_DIS0_R
                               EQU              0xE000E180
   49 00000000         
   50 00000000 00000022 
                       INT_WATCHDOG
                               EQU              34          ; Watchdog Timers 0
                                                             and 1
   51 00000000 00000023 
                       INT_TIMER0A
                               EQU              35          ; 16/32-Bit Timer 0
                                                            A
   52 00000000 00000024 
                       INT_TIMER0B
                               EQU              36          ; 16/32-Bit Timer 0
                                                            B
   53 00000000 00000025 
                       INT_TIMER1A
                               EQU              37          ; 16/32-Bit Timer 1
                                                            A
   54 00000000 00000026 
                       INT_TIMER1B
                               EQU              38          ; 16/32-Bit Timer 1
                                                            B
   55 00000000 00000027 
                       INT_TIMER2A
                               EQU              39          ; 16/32-Bit Timer 2
                                                            A
   56 00000000 00000028 
                       INT_TIMER2B
                               EQU              40          ; 16/32-Bit Timer 2
                                                            B
   57 00000000         
   58 00000000 007A11FF 
                       CONTAGEM_100_MS
                               EQU              7999999
   59 00000000 00F423FF 
                       CONTAGEM_200_MS
                               EQU              15999999
   60 00000000 016E35FF 
                       CONTAGEM_300_MS
                               EQU              23999999
   61 00000000 01E847FF 
                       CONTAGEM_400_MS
                               EQU              31999999
   62 00000000 026259FF 
                       CONTAGEM_500_MS
                               EQU              39999999
   63 00000000 02DC6BFF 
                       CONTAGEM_600_MS
                               EQU              47999999
   64 00000000 03567DFF 
                       CONTAGEM_700_MS
                               EQU              55999999
   65 00000000 03D08FFF 
                       CONTAGEM_800_MS



ARM Macro Assembler    Page 4 


                               EQU              63999999
   66 00000000 044AA1FF 
                       CONTAGEM_900_MS
                               EQU              71999999
   67 00000000         
   68 00000000 20001000 
                       ADDRESS_MEMORY_CONTAGEM
                               EQU              0x20001000
   69 00000000 00000004 
                       ADDRESS_MEMORY_OFFSET
                               EQU              0x04
   70 00000000         
   71 00000000 20001A00 
                       ADDRESS_MEMORY_TMP
                               EQU              0x20001A00
   72 00000000         
   73 00000000         ; ------------------------------------------------------
                       -------------------------
   74 00000000                 THUMB                        ; Instru��es do
                                                             tipo Thumb-2
   75 00000000         ; ------------------------------------------------------
                       -------------------------
   76 00000000         
   77 00000000         ; Declara��es EQU - Defines
   78 00000000         ;<NOME>         EQU <VALOR>
   79 00000000         ; ========================
   80 00000000         ; Defini��es de Valores
   81 00000000         ;=======
   82 00000000         ; Defini��es de Valores
   83 00000000 20000A08 
                       ACENDE_LED
                               EQU              0x20000A08
   84 00000000 20000A04 
                       TOGGLE_LED
                               EQU              0x20000A04
   85 00000000 20000A00 
                       RESET_SW
                               EQU              0x20000A00
   86 00000000         
   87 00000000         
   88 00000000         
   89 00000000         ; ------------------------------------------------------
                       -------------------------
   90 00000000         ; �rea de Dados - Declara��es de vari�veis
   91 00000000                 AREA             DATA, ALIGN=2
   92 00000000         ; Se alguma vari�vel for chamada em outro arquivo
   93 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       ri�vel <var> a 
   94 00000000         ; partir de outro arquivo
   95 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       vari�vel de nome <var>
   96 00000000         ; de <tam> bytes a partir da primeira 
   97 00000000         ; posi��o da RAM  
   98 00000000         ;=======
   99 00000000         ; posi��o da RAM 
  100 00000000         
  101 00000000         ; ------------------------------------------------------
                       -------------------------
  102 00000000         ; �rea de C�digo - Tudo abaixo da diretiva a seguir 



ARM Macro Assembler    Page 5 


                       ser� armazenado na mem�ria de 
  103 00000000         ;                  c�digo
  104 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  105 00000000         
  106 00000000         ; Se alguma fun��o do arquivo for chamada em outro a
                       rquivo 
  107 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            fun��o Start a 
                                                            partir de 
  108 00000000         ; outro arquivo. No caso startup.s
  109 00000000         
  110 00000000         ; Se chamar alguma fun��o externa 
  111 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
  112 00000000         ; fun��o <func>
  113 00000000         
  114 00000000                 IMPORT           PLL_Init
  115 00000000                 IMPORT           SysTick_Init
  116 00000000                 IMPORT           SysTick_Wait1ms
  117 00000000                 IMPORT           LCD_Init    ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
  118 00000000                 IMPORT           setup_LCD   ; Configuração do
                                                             LCD
  119 00000000                 IMPORT           send_comand_lcd
  120 00000000                 IMPORT           send_complex_comand_lcd
  121 00000000                 IMPORT           send_data_lcd
  122 00000000                 IMPORT           send_string_lcd
  123 00000000         
  124 00000000         
  125 00000000                 IMPORT           GPIO_Init
  126 00000000                 IMPORT           PortJ_Input
  127 00000000                 IMPORT           PortQ_Output
  128 00000000                 IMPORT           PortA_Output
  129 00000000                 IMPORT           PortP_Output
  130 00000000                 IMPORT           PortM_Output_Teclado
  131 00000000                 IMPORT           PortM_Output_LCD
  132 00000000                 IMPORT           PortL_Input
  133 00000000                 EXPORT           Timer0A_Handler
  134 00000000         
  135 00000000         
  136 00000000         ; ------------------------------------------------------
                       -------------------------
  137 00000000         ; Fun��o main()
  138 00000000         Start
  139 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
  140 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
  141 00000008 F7FF FFFE       BL               GPIO_Init
  142 0000000C F7FF FFFE       BL               LCD_Init
  143 00000010 F7FF FFFE       BL               setup_LCD
  144 00000014 F000 F89F       BL               Load_Contagem_Memoria ;Chama a 
                                                            subrotina que grava
                                                             na memoria os valo



ARM Macro Assembler    Page 6 


                                                            res da contagem
  145 00000018 F000 F8CE       BL               Timer0A_init ;Chama subrotina q
                                                            ue inicializa e hab
                                                            ilita interrupcao d
                                                            o timer 0_A
  146 0000001C         
  147 0000001C         
  148 0000001C         LimpaREGS_Tela_LEDS
  149 0000001C         
  150 0000001C F04F 0000       MOV              R0,#0
  151 00000020 F04F 0400       MOV              R4,#0       ; usado em Varredur
                                                            a
  152 00000024 F04F 0600       MOV              R6,#0       ;R6 = base multipli
                                                            cac�o
  153 00000028 F04F 0700       MOV              R7,#0       ;R7 = estado multip
                                                            licador
  154 0000002C F04F 0800       MOV              R8,#0       ;R8 = nova tecla de
                                                            tectada
  155 00000030 F04F 0900       MOV              R9,#0       ;R9 = tecla contage
                                                            m debounce
  156 00000034 F04F 0A00       MOV              R10,#0      ;R10= n estados deb
                                                            ounce
  157 00000038         
  158 00000038 487D            LDR              R0,=RESET_SW
  159 0000003A F04F 0100       MOV              R1,#0
  160 0000003E 6001            STR              R1,[R0]
  161 00000040 F04F 0000       MOV              R0,#0
  162 00000044 F04F 0100       MOV              R1,#0
  163 00000048         
  164 00000048         
  165 00000048         MainLoop
  166 00000048         
  167 00000048 F000 F85B       BL               faz_Varredura
  168 0000004C         
  169 0000004C 4878            LDR              R0,=RESET_SW
  170 0000004E 6800            LDR              R0,[R0]
  171 00000050 2801            CMP              R0,#1
  172 00000052 BF08            IT               EQ
  173 00000054 E7E2            BEQ              LimpaREGS_Tela_LEDS
  174 00000056         
  175 00000056 F000 F807       BL               AscendeLed
  176 0000005A F04F 0001       MOV              R0, #0x01
  177 0000005E F7FF FFFE       BL               send_complex_comand_lcd
  178 00000062 F7FF FFFE       BL               send_string_lcd
  179 00000066         
  180 00000066         
  181 00000066 E7EF            B                MainLoop
  182 00000068         
  183 00000068         ;-------------------------------------------------------
                       -------------------------
  184 00000068         ; Fun��o Pisca_LED
  185 00000068         ; Par�metro de entrada: N�o tem
  186 00000068         ; Par�metro de sa�da: N�o tem
  187 00000068         Pisca_LED
  188 00000068         ; Fun��o Pisca_LED
  189 00000068         ; Par�metro de entrada: N�o tem
  190 00000068         ; Par�metro de sa�da: N�o tem
  191 00000068         AscendeLed
  192 00000068         ; ****************************************



ARM Macro Assembler    Page 7 


  193 00000068         ; Escrever fun��o que acende o LED, espera 1 segundo
                       , apaga o LED e espera 1 s
  194 00000068         ; Esta fun��o deve chamar a rotina SysTick_Wait1ms c
                       om o par�metro de entrada em R0
  195 00000068         ; ****************************************
  196 00000068 B500            PUSH{LR}
  197 0000006A         
  198 0000006A 4630            MOV              R0,R6       ;#2_00001111
  199 0000006C         ;MOV R0,#3
  200 0000006C F7FF FFFE       BL               PortQ_Output
  201 00000070 4630            MOV              R0,R6       ;#2_11110000
  202 00000072 F7FF FFFE       BL               PortA_Output
  203 00000076 F04F 00FF       MOV              R0,#2_11111111
  204 0000007A F7FF FFFE       BL               PortP_Output
  205 0000007E F85D EB04       POP{LR}
  206 00000082         
  207 00000082 4770            BX               LR
  208 00000084         
  209 00000084         Varredura
  210 00000084 B500            PUSH{LR}
  211 00000086 F04F 0800       MOV              R8,#0
  212 0000008A F04F 0310       MOV              R3,#2_00010000
  213 0000008E F04F 0501       MOV              R5,#1
  214 00000092         
  215 00000092         Varredura_loop
  216 00000092 F083 00FF       EOR              R0,R3,#2_11111111 ; inverter bi
                                                            ts ligados
  217 00000096         
  218 00000096 F7FF FFFE       BL               PortM_Output_Teclado
  219 0000009A F7FF FFFE       BL               PortL_Input
  220 0000009E         
  221 0000009E F04F 04FF       MOV              R4,#2_11111111
  222 000000A2         
  223 000000A2 F080 000F       EOR              R0,R0,#2_1111 ; inverter bits l
                                                            igados
  224 000000A6         
  225 000000A6 2801            CMP              R0, #2_00000001
  226 000000A8 BF08            IT               EQ
  227 000000AA 2400            MOVEQ            R4,#0
  228 000000AC         
  229 000000AC 2802            CMP              R0, #2_00000010
  230 000000AE BF08            IT               EQ
  231 000000B0 2403            MOVEQ            R4,#3
  232 000000B2         
  233 000000B2 2804            CMP              R0, #2_00000100
  234 000000B4 BF08            IT               EQ
  235 000000B6 2406            MOVEQ            R4,#6
  236 000000B8         
  237 000000B8 2808            CMP              R0, #2_00001000
  238 000000BA BF08            IT               EQ
  239 000000BC 2409            MOVEQ            R4,#9
  240 000000BE         
  241 000000BE 2CFF            CMP              R4,#2_11111111
  242 000000C0 BF1C            ITT              NE
  243 000000C2 1964            ADDNE            R4,R4,R5
  244 000000C4 E008            BNE              Debounce_TRUE
  245 000000C6         
  246 000000C6 F105 0501       ADD              R5,R5,#1
  247 000000CA EA4F 0343       LSL              R3,R3,#1



ARM Macro Assembler    Page 8 


  248 000000CE 2B80            CMP              R3, #2_10000000
  249 000000D0 D1DF            BNE              Varredura_loop
  250 000000D2         
  251 000000D2         
  252 000000D2         
  253 000000D2         SaidaVarredura
  254 000000D2         
  255 000000D2         ; CMP R4,#2_11111111
  256 000000D2         ; IT NE
  257 000000D2         ;  BNE Debounce_TRUE
  258 000000D2         
  259 000000D2         Saida_deb
  260 000000D2         
  261 000000D2 F85D EB04       POP{LR}
  262 000000D6 4770            BX               LR
  263 000000D8         
  264 000000D8         Debounce_TRUE
  265 000000D8         
  266 000000D8 2C0B            CMP              R4, #11
  267 000000DA BF08            IT               EQ
  268 000000DC 2400            MOVEQ            R4,#0       ; zerar R4 >=10
  269 000000DE         
  270 000000DE 2C0A            CMP              R4, #10
  271 000000E0 BF28            IT               HS
  272 000000E2 E7F6            BHS              Saida_deb   ; sair >=10
  273 000000E4         
  274 000000E4 454C            CMP              R4, R9      ; R4 = nova tecla a
                                                            pertada ; R9 = tecl
                                                            a contagem debounce
                                                             ;R10= n estados de
                                                            bounce
  275 000000E6 BF0E            ITEE             EQ
  276 000000E8 F10A 0A01       ADDEQ            R10,R10,#1
  277 000000EC F04F 0A00       MOVNE            R10,#0
  278 000000F0 46A1            MOVNE            R9,R4
  279 000000F2         
  280 000000F2 F1BA 0F4B       CMP              R10,#75
  281 000000F6 BF04            ITT              EQ
  282 000000F8 F04F 0A00       MOVEQ            R10,#0
  283 000000FC F04F 0801       MOVEQ            R8,#1
  284 00000100         ;B   Saida_deb 
  285 00000100         
  286 00000100         
  287 00000100         ;BNE Varredura
  288 00000100 E7E7            B                Saida_deb
  289 00000102         
  290 00000102         faz_Varredura
  291 00000102 B500            PUSH{LR}
  292 00000104         
  293 00000104         repete
  294 00000104 F7FF FFBE       BL               Varredura
  295 00000108 F04F 0001       mov              R0,#1
  296 0000010C         ;BL Sys-Tick_Wait1ms
  297 0000010C 4848            LDR              R0,=RESET_SW
  298 0000010E 6800            LDR              R0,[R0]
  299 00000110 2801            CMP              R0,#1
  300 00000112 BF08            IT               EQ
  301 00000114 E00D            BEQ              saida
  302 00000116         



ARM Macro Assembler    Page 9 


  303 00000116 F1B8 0F01       CMP              R8,#1
  304 0000011A         ;IT NE
  305 0000011A         ;BNE repete
  306 0000011A BF18            IT               NE
  307 0000011C E009            BNE              saida
  308 0000011E 45B1            CMP              R9,R6
  309 00000120 BF1E            ITTT             NE
  310 00000122 464E            MOVNE            R6,R9
  311 00000124 2700            MOVNE            R7,#0
  312 00000126 E004            BNE              saida
  313 00000128 F107 0701       ADD              R7,#1
  314 0000012C 2F0A            CMP              R7,#10
  315 0000012E BF28            IT               HS
  316 00000130 2700            MOVHS            R7,#0
  317 00000132         
  318 00000132         saida
  319 00000132         
  320 00000132 F85D EB04       POP{LR}
  321 00000136 4770            BX               LR
  322 00000138         
  323 00000138         
  324 00000138         ;-------------------------------------------------------
                       -------------------------
  325 00000138         ; Fun��o Set_Contagem_timer
  326 00000138         ; Par�metro de entrada: R0 ( 1- 100 ms, 2 -200ms, ...,
                        9 - 900ms)
  327 00000138         ; Par�metro de sa�da: N�o tem
  328 00000138         Set_Contagem_timer
  329 00000138 B407            PUSH             {R0, R1, R2}
  330 0000013A         
  331 0000013A 4602            MOV              R2, R0      ;Salva o parametro 
                                                            de entrada em R2
  332 0000013C F1A2 0201       SUB              R2, R2, #1
  333 00000140         
  334 00000140 483C            LDR              R0, =ADDRESS_MEMORY_CONTAGEM
  335 00000142 F04F 0104       LDR              R1, =ADDRESS_MEMORY_OFFSET
  336 00000146 FB02 F201       MUL              R2, R2, R1
  337 0000014A 4402            ADD              R2, R2, R0
  338 0000014C 6811            LDR              R1, [R2]
  339 0000014E         
  340 0000014E 483A            LDR              R0, =TIMER0_TAILR_R
  341 00000150 6001            STR              R1, [R0]    ;Seta o contador pa
                                                            ra o valor requerid
                                                            o
  342 00000152         
  343 00000152 BC07            POP              {R0, R1, R2}
  344 00000154 4770            BX               LR
  345 00000156         
  346 00000156         ;-------------------------------------------------------
                       -------------------------
  347 00000156         ; Fun��o Set_Contagem_timer
  348 00000156         ; Par�metro de entrada: R0 ( 1- 100 ms, 2 -200ms, ...,
                        9 - 900ms)
  349 00000156         ; Par�metro de sa�da: N�o tem
  350 00000156         Load_Contagem_Memoria
  351 00000156 B503            PUSH             {R0, R1, LR}
  352 00000158 4836            LDR              R0, =ADDRESS_MEMORY_CONTAGEM
  353 0000015A 4938            LDR              R1, =CONTAGEM_100_MS
  354 0000015C 6001            STR              R1, [R0]    ;Carrega o valor de



ARM Macro Assembler    Page 10 


                                                             contagem de 100 ms
                                                             no endereco R0
  355 0000015E         
  356 0000015E F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  357 00000162 4937            LDR              R1, =CONTAGEM_200_MS
  358 00000164 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 200 ms
                                                             no endereco R0
  359 00000166         
  360 00000166 F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  361 0000016A 4936            LDR              R1, =CONTAGEM_300_MS
  362 0000016C 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 300 ms
                                                             no endereco R0
  363 0000016E         
  364 0000016E F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  365 00000172 4935            LDR              R1, =CONTAGEM_400_MS
  366 00000174 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 400 ms
                                                             no endereco R0
  367 00000176         
  368 00000176 F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  369 0000017A 4934            LDR              R1, =CONTAGEM_500_MS
  370 0000017C 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 500 ms
                                                             no endereco R0
  371 0000017E         
  372 0000017E F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  373 00000182 4933            LDR              R1, =CONTAGEM_600_MS
  374 00000184 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 600 ms
                                                             no endereco R0
  375 00000186         
  376 00000186 F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  377 0000018A 4932            LDR              R1, =CONTAGEM_700_MS
  378 0000018C 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 700 ms
                                                             no endereco R0
  379 0000018E         
  380 0000018E F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  381 00000192 4931            LDR              R1, =CONTAGEM_800_MS
  382 00000194 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 800 ms
                                                             no endereco R0
  383 00000196         
  384 00000196 F100 0004       ADD              R0, R0, #ADDRESS_MEMORY_OFFSET
  385 0000019A 4930            LDR              R1, =CONTAGEM_900_MS
  386 0000019C 6001            STR              R1, [R0]    ;Carrega o valor de
                                                             contagem de 900 ms
                                                             no endereco R0 
  387 0000019E         
  388 0000019E E8BD 4003       POP              {R0, R1, LR}
  389 000001A2 4770            BX               LR
  390 000001A4         ;-------------------------------------------------------
                       -------------------------
  391 000001A4         ; Fun��o Timer0A_Handler
  392 000001A4         ; Par�metro de entrada: N�o tem
  393 000001A4         ; Par�metro de sa�da: N�o tem
  394 000001A4         Timer0A_Handler



ARM Macro Assembler    Page 11 


  395 000001A4 492E            LDR              R1, =TIMER0_ICR_R
  396 000001A6 F04F 0001       MOV              R0, #1
  397 000001AA 6008            STR              R0, [R1]
  398 000001AC B500            PUSH             {LR}
  399 000001AE F7FF FF5B       BL               Pisca_LED
  400 000001B2 F85D EB04       POP              {LR}
  401 000001B6 4770            BX               LR
  402 000001B8         
  403 000001B8         
  404 000001B8         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  405 000001B8         ; Funcao Timer0A_init (inicializacao do timer A0)
  406 000001B8         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  407 000001B8         Timer0A_init
  408 000001B8 482A            LDR              R0, =SYSCTL_RCGCTIMER_R
  409 000001BA F04F 0101       MOV              R1, #2_0000001
  410 000001BE 6001            STR              R1, [R0]    ;Habilitar o TIMER 
                                                            0 no registrador RC
                                                            GCTIMER
  411 000001C0         
  412 000001C0 4829            LDR              R0, =SYSCTL_PRTIMER_R
  413 000001C2         Espera_PRTIMER
  414 000001C2 6801            LDR              R1, [R0]
  415 000001C4 F04F 0201       MOV              R2, #2_0000001
  416 000001C8 4211            TST              R1, R2      ;Testa o R1 com R2 
                                                            fazendo R1 & R2
  417 000001CA D0FA            BEQ              Espera_PRTIMER ;Se o flag Z=1, 
                                                            volta para o la�o
                                                            . Sen�o continua 
                                                            executando
  418 000001CC         
  419 000001CC 4827            LDR              R0, =TIMER0_CTL_R
  420 000001CE F04F 0100       MOV              R1, #0X00
  421 000001D2 6001            STR              R1, [R0]    ;Desabilita TIMERS
  422 000001D4         
  423 000001D4 4826            LDR              R0, =TIMER0_CFG_R
  424 000001D6 F04F 0100       MOV              R1, #0X00
  425 000001DA 6001            STR              R1, [R0]    ;Configura TIMER pa
                                                            ra 32 bits
  426 000001DC         
  427 000001DC 4825            LDR              R0, =TIMER0_TAMR_R
  428 000001DE F04F 0102       MOV              R1, #0X2
  429 000001E2 6001            STR              R1, [R0]    ;Habilita modo peri
                                                            odico no TIMER A
  430 000001E4         
  431 000001E4 4814            LDR              R0, =TIMER0_TAILR_R
  432 000001E6 4915            LDR              R1, =7999999
  433 000001E8 6001            STR              R1, [R0]    ;Habilita contador 
                                                            para o valor 100ms
  434 000001EA         
  435 000001EA 4823            LDR              R0, =TIMER0_TAPR_R
  436 000001EC F04F 0100       MOV              R1, #0X00
  437 000001F0 6001            STR              R1, [R0]    ;Limpa o preescale 
                                                            (zerado)
  438 000001F2         
  439 000001F2 481B            LDR              R0, =TIMER0_ICR_R



ARM Macro Assembler    Page 12 


  440 000001F4 6801            LDR              R1, [R0]
  441 000001F6 F041 0101       ORR              R1, R1, #0X01
  442 000001FA 6001            STR              R1, [R0]    ;Limpa a interrupca
                                                            o do TIMER A
  443 000001FC         
  444 000001FC         
  445 000001FC 481F            LDR              R0, =TIMER0_IMR_R
  446 000001FE 6801            LDR              R1, [R0]
  447 00000200 F041 0101       ORR              R1, R1, #0X01
  448 00000204 6001            STR              R1, [R0]    ;Seta a interrup�
                                                            �o do TimerA
  449 00000206         
  450 00000206 481E            LDR              R0, =NVIC_PRI4_R
  451 00000208 6801            LDR              R1, [R0]
  452 0000020A F04F 0204       MOV              R2, #4
  453 0000020E EA4F 7242       LSL              R2, R2, #29
  454 00000212 EA41 0102       ORR              R1, R1, R2
  455 00000216 6001            STR              R1, [R0]    ;Seta a prioridade 
                                                            do TIMER A0
  456 00000218         
  457 00000218 481A            LDR              R0, =NVIC_EN0_R
  458 0000021A F04F 0101       MOV              R1, #1
  459 0000021E EA4F 41C1       LSL              R1, R1, #19
  460 00000222 6001            STR              R1, [R0]    ;Habilita a interru
                                                            pcao do TIMER A0
  461 00000224         
  462 00000224 4811            LDR              R0, =TIMER0_CTL_R
  463 00000226 F04F 0101       MOV              R1, #0X01
  464 0000022A 6001            STR              R1, [R0]    ;Habilita TIMER A
  465 0000022C         
  466 0000022C 4770            BX               LR
  467 0000022E         
  468 0000022E         
  469 0000022E         
  470 0000022E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  471 0000022E         ; Fim do Arquivo
  472 0000022E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  473 0000022E 00 00           ALIGN                        ;Garante que o fim 
                                                            da se��o est�
                                                             alinhada 
  474 00000230                 END                          ;Fim do arquivo
              20000A00 
              20001000 
              40030028 
              007A11FF 
              00F423FF 
              016E35FF 
              01E847FF 
              026259FF 
              02DC6BFF 
              03567DFF 
              03D08FFF 
              044AA1FF 
              40030024 
              400FE604 



ARM Macro Assembler    Page 13 


              400FEA04 
              4003000C 
              40030000 
              40030004 
              40030038 
              40030018 
              E000E410 
              E000E100 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\IanIshikawa\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 541" --predefine="TM4C1294NCPDT SETA 1
" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 91 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 104 in file main.s
   Uses
      None
Comment: .text unused
AscendeLed 00000068

Symbol: AscendeLed
   Definitions
      At line 191 in file main.s
   Uses
      At line 175 in file main.s
Comment: AscendeLed used once
Debounce_TRUE 000000D8

Symbol: Debounce_TRUE
   Definitions
      At line 264 in file main.s
   Uses
      At line 244 in file main.s
Comment: Debounce_TRUE used once
Espera_PRTIMER 000001C2

Symbol: Espera_PRTIMER
   Definitions
      At line 413 in file main.s
   Uses
      At line 417 in file main.s
Comment: Espera_PRTIMER used once
LimpaREGS_Tela_LEDS 0000001C

Symbol: LimpaREGS_Tela_LEDS
   Definitions
      At line 148 in file main.s
   Uses
      At line 173 in file main.s
Comment: LimpaREGS_Tela_LEDS used once
Load_Contagem_Memoria 00000156

Symbol: Load_Contagem_Memoria
   Definitions
      At line 350 in file main.s
   Uses
      At line 144 in file main.s
Comment: Load_Contagem_Memoria used once
MainLoop 00000048

Symbol: MainLoop
   Definitions
      At line 165 in file main.s
   Uses
      At line 181 in file main.s
Comment: MainLoop used once
Pisca_LED 00000068

Symbol: Pisca_LED



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 187 in file main.s
   Uses
      At line 399 in file main.s
Comment: Pisca_LED used once
SaidaVarredura 000000D2

Symbol: SaidaVarredura
   Definitions
      At line 253 in file main.s
   Uses
      None
Comment: SaidaVarredura unused
Saida_deb 000000D2

Symbol: Saida_deb
   Definitions
      At line 259 in file main.s
   Uses
      At line 272 in file main.s
      At line 288 in file main.s

Set_Contagem_timer 00000138

Symbol: Set_Contagem_timer
   Definitions
      At line 328 in file main.s
   Uses
      None
Comment: Set_Contagem_timer unused
Start 00000000

Symbol: Start
   Definitions
      At line 138 in file main.s
   Uses
      At line 107 in file main.s
Comment: Start used once
Timer0A_Handler 000001A4

Symbol: Timer0A_Handler
   Definitions
      At line 394 in file main.s
   Uses
      At line 133 in file main.s
Comment: Timer0A_Handler used once
Timer0A_init 000001B8

Symbol: Timer0A_init
   Definitions
      At line 407 in file main.s
   Uses
      At line 145 in file main.s
Comment: Timer0A_init used once
Varredura 00000084

Symbol: Varredura
   Definitions
      At line 209 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 294 in file main.s
Comment: Varredura used once
Varredura_loop 00000092

Symbol: Varredura_loop
   Definitions
      At line 215 in file main.s
   Uses
      At line 249 in file main.s
Comment: Varredura_loop used once
faz_Varredura 00000102

Symbol: faz_Varredura
   Definitions
      At line 290 in file main.s
   Uses
      At line 167 in file main.s
Comment: faz_Varredura used once
repete 00000104

Symbol: repete
   Definitions
      At line 293 in file main.s
   Uses
      None
Comment: repete unused
saida 00000132

Symbol: saida
   Definitions
      At line 318 in file main.s
   Uses
      At line 301 in file main.s
      At line 307 in file main.s
      At line 312 in file main.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ACENDE_LED 20000A08

Symbol: ACENDE_LED
   Definitions
      At line 83 in file main.s
   Uses
      None
Comment: ACENDE_LED unused
ADDRESS_MEMORY_CONTAGEM 20001000

Symbol: ADDRESS_MEMORY_CONTAGEM
   Definitions
      At line 68 in file main.s
   Uses
      At line 334 in file main.s
      At line 352 in file main.s

ADDRESS_MEMORY_OFFSET 00000004

Symbol: ADDRESS_MEMORY_OFFSET
   Definitions
      At line 69 in file main.s
   Uses
      At line 335 in file main.s
      At line 356 in file main.s
      At line 360 in file main.s
      At line 364 in file main.s
      At line 368 in file main.s
      At line 372 in file main.s
      At line 376 in file main.s
      At line 380 in file main.s
      At line 384 in file main.s

ADDRESS_MEMORY_TMP 20001A00

Symbol: ADDRESS_MEMORY_TMP
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: ADDRESS_MEMORY_TMP unused
CONTAGEM_100_MS 007A11FF

Symbol: CONTAGEM_100_MS
   Definitions
      At line 58 in file main.s
   Uses
      At line 353 in file main.s
Comment: CONTAGEM_100_MS used once
CONTAGEM_200_MS 00F423FF

Symbol: CONTAGEM_200_MS
   Definitions
      At line 59 in file main.s
   Uses
      At line 357 in file main.s
Comment: CONTAGEM_200_MS used once
CONTAGEM_300_MS 016E35FF




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: CONTAGEM_300_MS
   Definitions
      At line 60 in file main.s
   Uses
      At line 361 in file main.s
Comment: CONTAGEM_300_MS used once
CONTAGEM_400_MS 01E847FF

Symbol: CONTAGEM_400_MS
   Definitions
      At line 61 in file main.s
   Uses
      At line 365 in file main.s
Comment: CONTAGEM_400_MS used once
CONTAGEM_500_MS 026259FF

Symbol: CONTAGEM_500_MS
   Definitions
      At line 62 in file main.s
   Uses
      At line 369 in file main.s
Comment: CONTAGEM_500_MS used once
CONTAGEM_600_MS 02DC6BFF

Symbol: CONTAGEM_600_MS
   Definitions
      At line 63 in file main.s
   Uses
      At line 373 in file main.s
Comment: CONTAGEM_600_MS used once
CONTAGEM_700_MS 03567DFF

Symbol: CONTAGEM_700_MS
   Definitions
      At line 64 in file main.s
   Uses
      At line 377 in file main.s
Comment: CONTAGEM_700_MS used once
CONTAGEM_800_MS 03D08FFF

Symbol: CONTAGEM_800_MS
   Definitions
      At line 65 in file main.s
   Uses
      At line 381 in file main.s
Comment: CONTAGEM_800_MS used once
CONTAGEM_900_MS 044AA1FF

Symbol: CONTAGEM_900_MS
   Definitions
      At line 66 in file main.s
   Uses
      At line 385 in file main.s
Comment: CONTAGEM_900_MS used once
INT_TIMER0A 00000023

Symbol: INT_TIMER0A
   Definitions
      At line 51 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: INT_TIMER0A unused
INT_TIMER0B 00000024

Symbol: INT_TIMER0B
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: INT_TIMER0B unused
INT_TIMER1A 00000025

Symbol: INT_TIMER1A
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: INT_TIMER1A unused
INT_TIMER1B 00000026

Symbol: INT_TIMER1B
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: INT_TIMER1B unused
INT_TIMER2A 00000027

Symbol: INT_TIMER2A
   Definitions
      At line 55 in file main.s
   Uses
      None
Comment: INT_TIMER2A unused
INT_TIMER2B 00000028

Symbol: INT_TIMER2B
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: INT_TIMER2B unused
INT_WATCHDOG 00000022

Symbol: INT_WATCHDOG
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: INT_WATCHDOG unused
NVIC_DIS0_R E000E180

Symbol: NVIC_DIS0_R
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: NVIC_DIS0_R unused



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

NVIC_EN0_R E000E100

Symbol: NVIC_EN0_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 457 in file main.s
Comment: NVIC_EN0_R used once
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: NVIC_EN1_R unused
NVIC_EN2_R E000E108

Symbol: NVIC_EN2_R
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: NVIC_EN2_R unused
NVIC_EN3_R E000E10C

Symbol: NVIC_EN3_R
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: NVIC_EN3_R unused
NVIC_PRI4_R E000E410

Symbol: NVIC_PRI4_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 450 in file main.s
Comment: NVIC_PRI4_R used once
RESET_SW 20000A00

Symbol: RESET_SW
   Definitions
      At line 85 in file main.s
   Uses
      At line 158 in file main.s
      At line 169 in file main.s
      At line 297 in file main.s

SYSCTL_PRTIMER_R 400FEA04

Symbol: SYSCTL_PRTIMER_R
   Definitions
      At line 13 in file main.s
   Uses
      At line 412 in file main.s
Comment: SYSCTL_PRTIMER_R used once
SYSCTL_RCGCTIMER_R 400FE604



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCTL_RCGCTIMER_R
   Definitions
      At line 12 in file main.s
   Uses
      At line 408 in file main.s
Comment: SYSCTL_RCGCTIMER_R used once
TIMER0_ADCEV_R 40030070

Symbol: TIMER0_ADCEV_R
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: TIMER0_ADCEV_R unused
TIMER0_CC_R 40030FC8

Symbol: TIMER0_CC_R
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: TIMER0_CC_R unused
TIMER0_CFG_R 40030000

Symbol: TIMER0_CFG_R
   Definitions
      At line 14 in file main.s
   Uses
      At line 423 in file main.s
Comment: TIMER0_CFG_R used once
TIMER0_CTL_R 4003000C

Symbol: TIMER0_CTL_R
   Definitions
      At line 17 in file main.s
   Uses
      At line 419 in file main.s
      At line 462 in file main.s

TIMER0_DMAEV_R 4003006C

Symbol: TIMER0_DMAEV_R
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: TIMER0_DMAEV_R unused
TIMER0_ICR_R 40030024

Symbol: TIMER0_ICR_R
   Definitions
      At line 22 in file main.s
   Uses
      At line 395 in file main.s
      At line 439 in file main.s

TIMER0_IMR_R 40030018




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: TIMER0_IMR_R
   Definitions
      At line 19 in file main.s
   Uses
      At line 445 in file main.s
Comment: TIMER0_IMR_R used once
TIMER0_MIS_R 40030020

Symbol: TIMER0_MIS_R
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: TIMER0_MIS_R unused
TIMER0_PP_R 40030FC0

Symbol: TIMER0_PP_R
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: TIMER0_PP_R unused
TIMER0_RIS_R 4003001C

Symbol: TIMER0_RIS_R
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: TIMER0_RIS_R unused
TIMER0_RTCPD_R 40030058

Symbol: TIMER0_RTCPD_R
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: TIMER0_RTCPD_R unused
TIMER0_SYNC_R 40030010

Symbol: TIMER0_SYNC_R
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: TIMER0_SYNC_R unused
TIMER0_TAILR_R 40030028

Symbol: TIMER0_TAILR_R
   Definitions
      At line 23 in file main.s
   Uses
      At line 340 in file main.s
      At line 431 in file main.s

TIMER0_TAMATCHR_R 40030030

Symbol: TIMER0_TAMATCHR_R
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 25 in file main.s
   Uses
      None
Comment: TIMER0_TAMATCHR_R unused
TIMER0_TAMR_R 40030004

Symbol: TIMER0_TAMR_R
   Definitions
      At line 15 in file main.s
   Uses
      At line 427 in file main.s
Comment: TIMER0_TAMR_R used once
TIMER0_TAPMR_R 40030040

Symbol: TIMER0_TAPMR_R
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: TIMER0_TAPMR_R unused
TIMER0_TAPR_R 40030038

Symbol: TIMER0_TAPR_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 435 in file main.s
Comment: TIMER0_TAPR_R used once
TIMER0_TAPS_R 4003005C

Symbol: TIMER0_TAPS_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: TIMER0_TAPS_R unused
TIMER0_TAR_R 40030048

Symbol: TIMER0_TAR_R
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: TIMER0_TAR_R unused
TIMER0_TAV_R 40030050

Symbol: TIMER0_TAV_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: TIMER0_TAV_R unused
TIMER0_TBILR_R 4003002C

Symbol: TIMER0_TBILR_R
   Definitions
      At line 24 in file main.s
   Uses
      None



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: TIMER0_TBILR_R unused
TIMER0_TBMATCHR_R 40030034

Symbol: TIMER0_TBMATCHR_R
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: TIMER0_TBMATCHR_R unused
TIMER0_TBMR_R 40030008

Symbol: TIMER0_TBMR_R
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: TIMER0_TBMR_R unused
TIMER0_TBPMR_R 40030044

Symbol: TIMER0_TBPMR_R
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: TIMER0_TBPMR_R unused
TIMER0_TBPR_R 4003003C

Symbol: TIMER0_TBPR_R
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: TIMER0_TBPR_R unused
TIMER0_TBPS_R 40030060

Symbol: TIMER0_TBPS_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: TIMER0_TBPS_R unused
TIMER0_TBR_R 4003004C

Symbol: TIMER0_TBR_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: TIMER0_TBR_R unused
TIMER0_TBV_R 40030054

Symbol: TIMER0_TBV_R
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: TIMER0_TBV_R unused
TOGGLE_LED 20000A04




ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

Symbol: TOGGLE_LED
   Definitions
      At line 84 in file main.s
   Uses
      None
Comment: TOGGLE_LED unused
58 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 125 in file main.s
   Uses
      At line 141 in file main.s
Comment: GPIO_Init used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 117 in file main.s
   Uses
      At line 142 in file main.s
Comment: LCD_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 114 in file main.s
   Uses
      At line 139 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 128 in file main.s
   Uses
      At line 202 in file main.s
Comment: PortA_Output used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 126 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 132 in file main.s
   Uses
      At line 219 in file main.s
Comment: PortL_Input used once
PortM_Output_LCD 00000000

Symbol: PortM_Output_LCD
   Definitions
      At line 131 in file main.s
   Uses
      None
Comment: PortM_Output_LCD unused
PortM_Output_Teclado 00000000

Symbol: PortM_Output_Teclado



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 130 in file main.s
   Uses
      At line 218 in file main.s
Comment: PortM_Output_Teclado used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 129 in file main.s
   Uses
      At line 204 in file main.s
Comment: PortP_Output used once
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 127 in file main.s
   Uses
      At line 200 in file main.s
Comment: PortQ_Output used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 115 in file main.s
   Uses
      At line 140 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 116 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
send_comand_lcd 00000000

Symbol: send_comand_lcd
   Definitions
      At line 119 in file main.s
   Uses
      None
Comment: send_comand_lcd unused
send_complex_comand_lcd 00000000

Symbol: send_complex_comand_lcd
   Definitions
      At line 120 in file main.s
   Uses
      At line 177 in file main.s
Comment: send_complex_comand_lcd used once
send_data_lcd 00000000

Symbol: send_data_lcd
   Definitions
      At line 121 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      None
Comment: send_data_lcd unused
send_string_lcd 00000000

Symbol: send_string_lcd
   Definitions
      At line 122 in file main.s
   Uses
      At line 178 in file main.s
Comment: send_string_lcd used once
setup_LCD 00000000

Symbol: setup_LCD
   Definitions
      At line 118 in file main.s
   Uses
      At line 143 in file main.s
Comment: setup_LCD used once
17 symbols
431 symbols in table
